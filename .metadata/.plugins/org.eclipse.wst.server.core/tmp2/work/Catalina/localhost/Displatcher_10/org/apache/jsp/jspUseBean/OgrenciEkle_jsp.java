/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.7
 * Generated at: 2023-03-23 18:32:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jspUseBean;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class OgrenciEkle_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Öğrenci Ekle</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style >.button{\r\n");
      out.write("\r\n");
      out.write("background-color:green;\r\n");
      out.write("border : none ; \r\n");
      out.write("color :white;\r\n");
      out.write("padding : 15px 30px ;\r\n");
      out.write("text-align:center ;\r\n");
      out.write("text-decoration:none ;\r\n");
      out.write("font-size:16px;\r\n");
      out.write("transition : background-color 1s ease;\r\n");
      out.write("} \r\n");
      out.write(".button:hover {\r\n");
      out.write("background-color:red;\r\n");
      out.write("cursor:pointer;\r\n");
      out.write("}\r\n");
      out.write(".table {\r\n");
      out.write("border-collapse : collapse;\r\n");
      out.write("white :100%;\r\n");
      out.write("}\r\n");
      out.write(".td,.th{\r\n");
      out.write("border:1px solid black ; \r\n");
      out.write("text-allign:left;\r\n");
      out.write("padding:10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<form action=\"/ogrenciEkle\" method = \"post\">\r\n");
      out.write("<table class=\"table\">\r\n");
      out.write("<tr class =\"tr\">\r\n");
      out.write("<th class =\"th\">Numara class </th>\r\n");
      out.write("<th class =\"th\">Adı</th>\r\n");
      out.write("<th class =\"th\">Soyadı</th>\r\n");
      out.write("<th class =\"th\">Sınıf</th>\r\n");
      out.write("<th class =\"th\">Şube</th>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr class = \"tr\">\r\n");
      out.write("<td class = \"td\"><input type = \"text\" name=\"no\" ></td>\r\n");
      out.write("<td class = \"td\"><input type = \"text\" name=\"ad\"></td>\r\n");
      out.write("<td class = \"td\"><input type = \"text\" name=\"soyad\"></td>\r\n");
      out.write("<td class = \"td\"><input type = \"text\" name=\"sinif\"></td>\r\n");
      out.write("<td class = \"td\"><input type = \"text\" name=\"sube\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("<input type = \"submit\" class = \"button\" value=\"Öğrenci Ekle\"></form>\r\n");
      out.write("\r\n");
      bean.pojo.Ogrenci eklenenOgrenci = null;
      eklenenOgrenci = (bean.pojo.Ogrenci) _jspx_page_context.getAttribute("eklenenOgrenci", jakarta.servlet.jsp.PageContext.PAGE_SCOPE);
      if (eklenenOgrenci == null){
        eklenenOgrenci = new bean.pojo.DershaneOgrenci();
        _jspx_page_context.setAttribute("eklenenOgrenci", eklenenOgrenci, jakarta.servlet.jsp.PageContext.PAGE_SCOPE);
        out.write("\r\n");
        out.write("  ");
        org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("eklenenOgrenci"), "no", "NO_YOK", null, null, false);
        out.write("\r\n");
        out.write("    ");
        org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("eklenenOgrenci"), "ad", "AD_YOK", null, null, false);
        out.write("\r\n");
        out.write("    ");
        org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("eklenenOgrenci"), "soyad", "SOYADI_YOK", null, null, false);
        out.write("\r\n");
        out.write("    ");
        org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("eklenenOgrenci"), "sinif", "0", null, null, false);
        out.write("\r\n");
        out.write("    ");
        org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("eklenenOgrenci"), "sube", "X", null, null, false);
        out.write('\r');
        out.write('\n');
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<table class = \"table\"> \r\n");
      out.write("<tr class = \"tr\">\r\n");
      out.write("<th class =\"th\">\r\n");
      out.write("Numara\r\n");
      out.write("</th>\r\n");
      out.write("<th class =\"th\">\r\n");
      out.write("Adı Soyadı\r\n");
      out.write("</th>\r\n");
      out.write("<th class =\"th\">\r\n");
      out.write("Sınıf/Şube\r\n");
      out.write("</th>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr class =\"tr\">\r\n");
      out.write("<td class =\"td\"> ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((bean.pojo.DershaneOgrenci)_jspx_page_context.findAttribute("eklenenOgrenci")).getNo())));
      out.write("   </td>\r\n");
      out.write("<td class =\"td\">  ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((bean.pojo.DershaneOgrenci)_jspx_page_context.findAttribute("eklenenOgrenci")).getAd())));
      out.write('\r');
      out.write('\n');
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((bean.pojo.DershaneOgrenci)_jspx_page_context.findAttribute("eklenenOgrenci")).getSoyad())));
      out.write("   </td>\r\n");
      out.write("<td class =\"td\"> \r\n");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((bean.pojo.DershaneOgrenci)_jspx_page_context.findAttribute("eklenenOgrenci")).getSinif())));
      out.write('/');
      out.write('\r');
      out.write('\n');
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((bean.pojo.DershaneOgrenci)_jspx_page_context.findAttribute("eklenenOgrenci")).getSube())));
      out.write("\r\n");
      out.write(" </td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
